// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using web.Data;

#nullable disable

namespace web.Migrations
{
    [DbContext(typeof(SvetKnjigContext))]
    [Migration("20231127173115_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.22")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("web.Models.Avtor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Datum_rojstva")
                        .HasColumnType("datetime2");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Priimek")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Avtor", (string)null);
                });

            modelBuilder.Entity("web.Models.Izposoja_nakup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<double>("Cena")
                        .HasColumnType("float");

                    b.Property<DateTime>("Datum_izposoje")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Datum_vrnitve")
                        .HasColumnType("datetime2");

                    b.Property<int>("knjigaId")
                        .HasColumnType("int");

                    b.Property<int>("uporabnikID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("knjigaId");

                    b.HasIndex("uporabnikID");

                    b.ToTable("Izposoja_nakup", (string)null);
                });

            modelBuilder.Entity("web.Models.Knjiga", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Letnica_izdaje")
                        .HasColumnType("datetime2");

                    b.Property<string>("Naslov")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Stevilo_strani")
                        .HasColumnType("int");

                    b.Property<string>("Zalozba")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Knjiga", (string)null);
                });

            modelBuilder.Entity("web.Models.Knjiga_avtor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("avtorId")
                        .HasColumnType("int");

                    b.Property<int>("knjigaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("avtorId");

                    b.HasIndex("knjigaId");

                    b.ToTable("Knjiga_avtor", (string)null);
                });

            modelBuilder.Entity("web.Models.Knjiga_zanr", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("knjigaId")
                        .HasColumnType("int");

                    b.Property<int>("zanrId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("knjigaId");

                    b.HasIndex("zanrId");

                    b.ToTable("Knjiga_zanr", (string)null);
                });

            modelBuilder.Entity("web.Models.Ocene_komentarji", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Datum_ocene")
                        .HasColumnType("datetime2");

                    b.Property<string>("Komentar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Ocena")
                        .HasColumnType("int");

                    b.Property<int>("knjigaId")
                        .HasColumnType("int");

                    b.Property<int>("uporabnikID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("knjigaId");

                    b.HasIndex("uporabnikID");

                    b.ToTable("Ocene_komentarji", (string)null);
                });

            modelBuilder.Entity("web.Models.Uporabnik", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<DateTime>("Datum_rojstva")
                        .HasColumnType("datetime2");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Priimek")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Uporabnisko_ime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("geslo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Uporabnik", (string)null);
                });

            modelBuilder.Entity("web.Models.Zanr", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Ime_zanra")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Zanr", (string)null);
                });

            modelBuilder.Entity("web.Models.Izposoja_nakup", b =>
                {
                    b.HasOne("web.Models.Knjiga", "knjiga")
                        .WithMany("izposoje_nakupi")
                        .HasForeignKey("knjigaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("web.Models.Uporabnik", "uporabnik")
                        .WithMany("izposoje_nakupi")
                        .HasForeignKey("uporabnikID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("knjiga");

                    b.Navigation("uporabnik");
                });

            modelBuilder.Entity("web.Models.Knjiga_avtor", b =>
                {
                    b.HasOne("web.Models.Avtor", "avtor")
                        .WithMany("Knjige_avtorji")
                        .HasForeignKey("avtorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("web.Models.Knjiga", "knjiga")
                        .WithMany("knjige_avtorji")
                        .HasForeignKey("knjigaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("avtor");

                    b.Navigation("knjiga");
                });

            modelBuilder.Entity("web.Models.Knjiga_zanr", b =>
                {
                    b.HasOne("web.Models.Knjiga", "knjiga")
                        .WithMany("knjige_zanri")
                        .HasForeignKey("knjigaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("web.Models.Zanr", "zanr")
                        .WithMany("knjige_zanri")
                        .HasForeignKey("zanrId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("knjiga");

                    b.Navigation("zanr");
                });

            modelBuilder.Entity("web.Models.Ocene_komentarji", b =>
                {
                    b.HasOne("web.Models.Knjiga", "knjiga")
                        .WithMany("oceene_komentarji")
                        .HasForeignKey("knjigaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("web.Models.Uporabnik", "uporabnik")
                        .WithMany("ocene_komentarji")
                        .HasForeignKey("uporabnikID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("knjiga");

                    b.Navigation("uporabnik");
                });

            modelBuilder.Entity("web.Models.Avtor", b =>
                {
                    b.Navigation("Knjige_avtorji");
                });

            modelBuilder.Entity("web.Models.Knjiga", b =>
                {
                    b.Navigation("izposoje_nakupi");

                    b.Navigation("knjige_avtorji");

                    b.Navigation("knjige_zanri");

                    b.Navigation("oceene_komentarji");
                });

            modelBuilder.Entity("web.Models.Uporabnik", b =>
                {
                    b.Navigation("izposoje_nakupi");

                    b.Navigation("ocene_komentarji");
                });

            modelBuilder.Entity("web.Models.Zanr", b =>
                {
                    b.Navigation("knjige_zanri");
                });
#pragma warning restore 612, 618
        }
    }
}
